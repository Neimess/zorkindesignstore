name: backend_release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
      goos:
        description: 'Target OS (e.g. linux, windows)'
        required: true
        default: linux
      goarch:
        description: 'Target ARCH (e.g. amd64, arm64)'
        required: true
        default: amd64

permissions:
  contents: write

env:
  GO_VERSION: '1.24'
  MODULE_PATH: backend

jobs:
  release:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules & build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Set build metadata
        id: meta
        run: |
          echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build_time=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build binary
        working-directory: ${{ env.MODULE_PATH }}
        env:
          GOOS:   ${{ github.event.inputs.goos }}
          GOARCH: ${{ github.event.inputs.goarch }}
        run: |
          go build -ldflags "-s -w \
            -X 'main.version=${{ github.event.inputs.version }}' \
            -X 'main.commit=${{ steps.meta.outputs.commit }}' \
            -X 'main.buildDate=${{ steps.meta.outputs.build_time }}'" \
            -o bin/store-backend-${{ github.event.inputs.goos }}-${{ github.event.inputs.goarch }} \
            ./cmd/store

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          name: backend ${{ github.event.inputs.version }}
          artifacts: ${{ env.MODULE_PATH }}/bin/store-backend-${{ github.event.inputs.goos }}-${{ github.event.inputs.goarch }}
          allowUpdates: true
          replacesArtifacts: true
