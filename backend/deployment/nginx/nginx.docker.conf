worker_processes 2;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/json;
    sendfile        on;
    keepalive_timeout  65;
    gzip on;
    gzip_disable "msie6"; 
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    server {
        listen 80;
        server_name localhost;

        # Redirect HTTP to HTTPS (optional if TLS used)
        # return 301 https://$host$request_uri;

        location / {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Vary' 'Origin' always;
            # Preflight
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_pass         http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # For websockets if needed:
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }
    }
}
