// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package dto

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto(in *jlexer.Lexer, out *CategoryUpdateRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto(out *jwriter.Writer, in CategoryUpdateRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryUpdateRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryUpdateRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryUpdateRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryUpdateRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto(l, v)
}
func easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(in *jlexer.Lexer, out *CategoryResponseSlice) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(CategoryResponseSlice, 0, 2)
			} else {
				*out = CategoryResponseSlice{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 CategoryResponse
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(out *jwriter.Writer, in CategoryResponseSlice) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryResponseSlice) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryResponseSlice) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryResponseSlice) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryResponseSlice) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(l, v)
}
func easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(in *jlexer.Lexer, out *CategoryResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(out *jwriter.Writer, in CategoryResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(l, v)
}
func easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(in *jlexer.Lexer, out *CategoryCreateRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(out *jwriter.Writer, in CategoryCreateRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryCreateRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryCreateRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6a91a67cEncodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryCreateRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryCreateRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6a91a67cDecodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(l, v)
}
