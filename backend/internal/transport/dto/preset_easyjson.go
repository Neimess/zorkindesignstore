// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package dto

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto(in *jlexer.Lexer, out *ProductSummary) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		case "price":
			out.Price = float64(in.Float64())
		case "image_url":
			if in.IsNull() {
				in.Skip()
				out.ImageURL = nil
			} else {
				if out.ImageURL == nil {
					out.ImageURL = new(string)
				}
				*out.ImageURL = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto(out *jwriter.Writer, in ProductSummary) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	if in.ImageURL != nil {
		const prefix string = ",\"image_url\":"
		out.RawString(prefix)
		out.String(string(*in.ImageURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ProductSummary) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProductSummary) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProductSummary) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProductSummary) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto(l, v)
}
func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(in *jlexer.Lexer, out *PresetShortResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "preset_id":
			out.PresetID = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "total_price":
			out.TotalPrice = float64(in.Float64())
		case "image_url":
			out.ImageURL = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(out *jwriter.Writer, in PresetShortResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"preset_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.PresetID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	if in.TotalPrice != 0 {
		const prefix string = ",\"total_price\":"
		out.RawString(prefix)
		out.Float64(float64(in.TotalPrice))
	}
	if in.ImageURL != "" {
		const prefix string = ",\"image_url\":"
		out.RawString(prefix)
		out.String(string(in.ImageURL))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PresetShortResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresetShortResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresetShortResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresetShortResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto1(l, v)
}
func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(in *jlexer.Lexer, out *PresetShortListResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(PresetShortListResponse, 0, 0)
			} else {
				*out = PresetShortListResponse{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 PresetShortResponse
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(out *jwriter.Writer, in PresetShortListResponse) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v PresetShortListResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresetShortListResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresetShortListResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresetShortListResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto2(l, v)
}
func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(in *jlexer.Lexer, out *PresetResponseItem) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "product":
			(out.Product).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(out *jwriter.Writer, in PresetResponseItem) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"product\":"
		out.RawString(prefix[1:])
		(in.Product).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PresetResponseItem) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresetResponseItem) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresetResponseItem) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresetResponseItem) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto3(l, v)
}
func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto4(in *jlexer.Lexer, out *PresetResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "preset_id":
			out.PresetID = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "total_price":
			out.TotalPrice = float64(in.Float64())
		case "image_url":
			out.ImageURL = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "items":
			if in.IsNull() {
				in.Skip()
				out.Items = nil
			} else {
				in.Delim('[')
				if out.Items == nil {
					if !in.IsDelim(']') {
						out.Items = make([]PresetResponseItem, 0, 1)
					} else {
						out.Items = []PresetResponseItem{}
					}
				} else {
					out.Items = (out.Items)[:0]
				}
				for !in.IsDelim(']') {
					var v4 PresetResponseItem
					(v4).UnmarshalEasyJSON(in)
					out.Items = append(out.Items, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto4(out *jwriter.Writer, in PresetResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"preset_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.PresetID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"total_price\":"
		out.RawString(prefix)
		out.Float64(float64(in.TotalPrice))
	}
	if in.ImageURL != "" {
		const prefix string = ",\"image_url\":"
		out.RawString(prefix)
		out.String(string(in.ImageURL))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"items\":"
		out.RawString(prefix)
		if in.Items == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Items {
				if v5 > 0 {
					out.RawByte(',')
				}
				(v6).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PresetResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresetResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresetResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresetResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto4(l, v)
}
func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto5(in *jlexer.Lexer, out *PresetRequestItem) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "product_id":
			out.ProductID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto5(out *jwriter.Writer, in PresetRequestItem) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"product_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ProductID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PresetRequestItem) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresetRequestItem) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresetRequestItem) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresetRequestItem) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto5(l, v)
}
func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto6(in *jlexer.Lexer, out *PresetRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "total_price":
			out.TotalPrice = float64(in.Float64())
		case "image_url":
			out.ImageURL = string(in.String())
		case "items":
			if in.IsNull() {
				in.Skip()
				out.Items = nil
			} else {
				in.Delim('[')
				if out.Items == nil {
					if !in.IsDelim(']') {
						out.Items = make([]PresetRequestItem, 0, 8)
					} else {
						out.Items = []PresetRequestItem{}
					}
				} else {
					out.Items = (out.Items)[:0]
				}
				for !in.IsDelim(']') {
					var v7 PresetRequestItem
					(v7).UnmarshalEasyJSON(in)
					out.Items = append(out.Items, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto6(out *jwriter.Writer, in PresetRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"total_price\":"
		out.RawString(prefix)
		out.Float64(float64(in.TotalPrice))
	}
	if in.ImageURL != "" {
		const prefix string = ",\"image_url\":"
		out.RawString(prefix)
		out.String(string(in.ImageURL))
	}
	{
		const prefix string = ",\"items\":"
		out.RawString(prefix)
		if in.Items == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Items {
				if v8 > 0 {
					out.RawByte(',')
				}
				(v9).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PresetRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresetRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresetRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresetRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto6(l, v)
}
func easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto7(in *jlexer.Lexer, out *PresetListResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(PresetListResponse, 0, 0)
			} else {
				*out = PresetListResponse{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v10 PresetResponse
			(v10).UnmarshalEasyJSON(in)
			*out = append(*out, v10)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto7(out *jwriter.Writer, in PresetListResponse) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v11, v12 := range in {
			if v11 > 0 {
				out.RawByte(',')
			}
			(v12).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v PresetListResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresetListResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson626eba69EncodeGithubComNeimessZorkinStoreProjectInternalTransportDto7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresetListResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresetListResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson626eba69DecodeGithubComNeimessZorkinStoreProjectInternalTransportDto7(l, v)
}
